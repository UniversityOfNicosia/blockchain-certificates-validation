!function (e, r) { "function" == typeof define && define.amd ? define([], r) : "object" == typeof exports ? module.exports = r() : e.compareVersions = r() }(this, function () { var e = /^v?(?:\d+)(\.(?:[x*]|\d+)(\.(?:[x*]|\d+)(\.(?:[x*]|\d+))?(?:-[\da-z\-]+(?:\.[\da-z\-]+)*)?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i; function r(e) { var r, t, n = e.replace(/^v/, "").replace(/\+.*$/, ""), i = (t = "-", -1 === (r = n).indexOf(t) ? r.length : r.indexOf(t)), f = n.substring(0, i).split("."); return f.push(n.substring(i + 1)), f } function t(e) { return isNaN(Number(e)) ? e : Number(e) } function n(r) { if ("string" != typeof r) throw new TypeError("Invalid argument expected string"); if (!e.test(r)) throw new Error("Invalid argument not valid semver ('" + r + "' received)") } return function (e, i) { [e, i].forEach(n); for (var f = r(e), o = r(i), a = 0; a < Math.max(f.length - 1, o.length - 1); a++) { var u = parseInt(f[a] || 0, 10), s = parseInt(o[a] || 0, 10); if (u > s) return 1; if (s > u) return -1 } var d = f[f.length - 1], p = o[o.length - 1]; if (d && p) { var l = d.split(".").map(t), g = p.split(".").map(t); for (a = 0; a < Math.max(l.length, g.length); a++) { if (void 0 === l[a] || "string" == typeof g[a] && "number" == typeof l[a]) return -1; if (void 0 === g[a] || "string" == typeof l[a] && "number" == typeof g[a]) return 1; if (l[a] > g[a]) return 1; if (g[a] > l[a]) return -1 } } else if (d || p) return d ? -1 : 1; return 0 } });